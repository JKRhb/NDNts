name: build
on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: 16-${{ hashFiles('**/package.json') }}
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: corepack pnpm install
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
      - run: corepack pnpm build
      - run: corepack pnpm literate
      - run: corepack pnpm lint
  unittest:
    strategy:
      matrix:
        node: [16, 17]
      fail-fast: false
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ matrix.node }}-${{ hashFiles('**/package.json') }}
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: install dependencies
        run: |
          echo "deb [arch=amd64 trusted=yes] https://nfd-nightly-apt.ndn.today/ubuntu focal main" \
            | sudo tee /etc/apt/sources.list.d/nfd-nightly.list
          sudo apt-get update
          sudo apt-get install --no-install-recommends ndnsec
      - run: corepack pnpm install
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
      - run: corepack pnpm cover -- --colors
      - uses: coverallsapp/github-action@master
        if: ${{ matrix.node == 16 }}
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  integ:
    strategy:
      fail-fast: false
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: 17-${{ hashFiles('**/package.json') }}
      - uses: actions/setup-node@v2
        with:
          node-version: 17
      - name: install dependencies
        run: |
          echo "deb [arch=amd64 trusted=yes] https://nfd-nightly-apt.ndn.today/ubuntu focal main" \
            | sudo tee /etc/apt/sources.list.d/nfd-nightly.list
          sudo apt-get update
          sudo apt-get install --no-install-recommends libndn-cxx-dev nfd
      - run: corepack pnpm install
      - run: corepack pnpm build
      - name: check dependencies vs devDependencies
        run: node mk/check-dep.mjs
      - run: corepack pnpm literate lint
      - run: corepack pnpm literate
      - run: cd integ/browser-tests && corepack pnpm test
      - run: cd integ/cxx-tests && corepack pnpm test
      - name: check C++ code style
        run: |
          corepack pnpm clang-format
          git diff --exit-code
  publish:
    needs: [build, unittest, integ]
    if: ${{ github.repository == 'yoursunny/NDNts' && github.event_name == 'push' }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: 16-${{ hashFiles('**/package.json') }}
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: corepack pnpm install
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
      - run: corepack pnpm build
      - run: bash mk/publish-nightly.sh
        env:
          GTAGID: UA-935676-11
      - run: corepack pnpm typedoc
        env:
          GTAGID: UA-935676-11
      - uses: crazy-max/ghaction-github-pages@v2
        with:
          repo: yoursunny/NDNts-nightly
          build_dir: ./mk/nightly-output/
          commit_message: ${{ github.sha }} ${{ github.run_id }}
          fqdn: ndnts-nightly.ndn.today
        env:
          GH_PAT: ${{ secrets.NIGHTLY_ACCESS_TOKEN }}
      - uses: South-Paw/action-netlify-deploy@v1.2.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          netlify-auth-token: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          netlify-site-id: 8987d2bb-7638-4d6b-adff-806fe3b7309a
          build-dir: ./docs/
